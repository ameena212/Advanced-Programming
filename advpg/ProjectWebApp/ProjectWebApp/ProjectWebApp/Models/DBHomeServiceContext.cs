// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace ProjectWebApp.Models
{
    public partial class DBHomeServiceContext : DbContext
    {
        public DBHomeServiceContext()
        {
        }

        public DBHomeServiceContext(DbContextOptions<DBHomeServiceContext> options)
            : base(options)
        {
        }

        public virtual DbSet<AppCategory> AppCategories { get; set; }
        public virtual DbSet<AppLog> AppLogs { get; set; }
        public virtual DbSet<AppService> AppServices { get; set; }
        public virtual DbSet<AppUser> AppUsers { get; set; }
        public virtual DbSet<Comment> Comments { get; set; }
        public virtual DbSet<Document> Documents { get; set; }
        public virtual DbSet<Notification> Notifications { get; set; }
        public virtual DbSet<NotificationStatus> NotificationStatuses { get; set; }
        public virtual DbSet<Payment> Payments { get; set; }
        public virtual DbSet<PaymentStatus> PaymentStatuses { get; set; }
        public virtual DbSet<ServiceRequest> ServiceRequests { get; set; }
        public virtual DbSet<ServiceStatus> ServiceStatuses { get; set; }
        public virtual DbSet<UserRole> UserRoles { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AppCategory>()
                .HasOne(a => a.Manager)
                .WithMany()
                .HasForeignKey(a => a.ManagerId)
                .OnDelete(DeleteBehavior.Restrict); // ou .OnDelete(DeleteBehavior.Cascade) selon vos besoins

             
            modelBuilder.Entity<Comment>()
                .HasOne(c => c.ServiceRequest)
                .WithMany(sr => sr.Comments)
                .HasForeignKey(c => c.ServiceRequestId)
                .OnDelete(DeleteBehavior.Restrict);// Spécifiez ON DELETE NO ACTION ou toute autre action de suppression appropriée
                                                   // Configurer le comportement de suppression pour Comment -> ServiceRequest
        }
        // Autres configurations
    
      

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            optionsBuilder.UseSqlServer(@"Server=(localdb)\MSSQLLocalDB;Initial Catalog=DBHomeService;Trusted_Connection=True;");
        }

    }
}